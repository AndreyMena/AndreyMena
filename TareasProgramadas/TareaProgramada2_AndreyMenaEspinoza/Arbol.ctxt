#BlueJ class context
comment0.target=Arbol
comment0.text=\r\n\ Programaci\u00F3n1\r\n\ TareaProgramada2\r\n\ @author\ (AndreyMenaEspinoza\ Carn\u00E9\:\ C04740)\r\n\ @version\ (1.1)\ \r\n\ Esta\ clase\ representa\ un\ arbol\ con\ sus\ nodos\ que\ contienen\ palabras\r\n
comment1.params=
comment1.target=Arbol()
comment1.text=\r\n\ Inicializa\ el\ arbol\ con\ su\ raiz.\r\n
comment2.params=
comment2.target=boolean\ estarVacio()
comment2.text=\r\n\ Este\ metodo\ verifica\ si\ un\ nodo\ esta\ vacio.\r\n\ @return\ resultado\r\n
comment3.params=palabraNueva
comment3.target=void\ agregar(Palabra)
comment3.text=\r\n\ Este\ metodo\ agrega\ un\ objeto\ de\ tipo\ Palabra\ al\ arbol.\r\n\ @param\ palabraNueva\r\n
comment4.params=palabra
comment4.target=int\ contarPalabra(Palabra)
comment4.text=\r\n\ Este\ metodo\ cuenta\ las\ veces\ que\ se\ encuentra\ una\ palabra\ en\ el\ programa.\r\n\ @param\ palabra\r\n\ @return\ resultado\ las\ veces\ que\ se\ encontraba\ la\ palabra\r\n
comment5.params=arbol
comment5.target=java.lang.String\ toString(Arbol)
comment5.text=\r\n\ Este\ metodo\ devuelve\ el\ contenido\ de\ todo\ el\ arbol\ nodo\ por\ nodo\ alfabeticamente,\ osea\ en\ orden\ izquierda,\ raiz,\ derecha.\r\n\ @param\ arbol\r\n\ @return\ resultado\ Todas\ las\ palabras\ del\ arbol\ alfabeticamente\ y\ una\ en\ cada\ linea.\r\n
comment6.params=
comment6.target=NodoArbol\ getNodo()
comment6.text=\r\n\ Devuelve\ el\ nodo\r\n\ @return\ raiz.\r\n
numComments=7
